-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dbfs_converter_log10_48_24_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_val : IN STD_LOGIC_VECTOR (25 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of dbfs_converter_log10_48_24_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv47_268826A13EF : STD_LOGIC_VECTOR (46 downto 0) := "00000100110100010000010011010100001001111101111";
    constant ap_const_lv79_3796F62A4DD : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000110111100101101111011000101010010011011101";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv57_180000000000000 : STD_LOGIC_VECTOR (56 downto 0) := "110000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv58_200000000000000 : STD_LOGIC_VECTOR (57 downto 0) := "1000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv57_0 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv37_0 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv41_0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000000";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv43_0 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    constant ap_const_lv44_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000000";
    constant ap_const_lv45_0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000000";
    constant ap_const_lv46_0 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000000";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv50_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    constant ap_const_lv51_0 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv53_0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal log_apfixed_reduce_log_inverse_lut_table_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log_inverse_lut_table_array_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_inverse_lut_table_array_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_q0 : STD_LOGIC_VECTOR (36 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_q0 : STD_LOGIC_VECTOR (32 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ce0 : STD_LOGIC;
    signal log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_q0 : STD_LOGIC_VECTOR (29 downto 0);
    signal b_frac_07_reg_398 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_07_reg_398_pp0_iter2_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_val_read_reg_2435 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln899_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2462_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln925_fu_622_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal icmp_ln923_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_reg_2471 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_1_fu_650_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal icmp_ln923_1_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_1_reg_2480 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_reg_2484 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_1_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_1_reg_2488 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_2_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_2_reg_2492 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_3_fu_866_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_3_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_4_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_4_reg_2500 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_5_fu_958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_5_reg_2504 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_6_fu_1004_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_6_reg_2508 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_7_fu_1050_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_7_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_8_fu_1096_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_8_reg_2516 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_9_fu_1142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_9_reg_2520 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_10_fu_1188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_10_reg_2524 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_11_fu_1234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_11_reg_2528 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_12_fu_1280_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_12_reg_2532 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_13_fu_1326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_13_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_14_fu_1372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_14_reg_2540 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_15_fu_1418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_15_reg_2544 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_16_fu_1464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_16_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_17_fu_1510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_17_reg_2552 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_18_fu_1556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_18_reg_2556 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_19_fu_1602_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_19_reg_2560 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_20_fu_1648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_20_reg_2564 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_21_fu_1694_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_21_reg_2568 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_22_fu_1734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln923_22_reg_2572 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_25_fu_1742_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal icmp_ln923_25_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_25_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_26_fu_1760_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_26_reg_2585 : STD_LOGIC_VECTOR (57 downto 0);
    signal select_ln923_23_fu_1774_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln923_23_reg_2590 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln946_fu_2088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln946_reg_2598 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_frac_tilde_inverse_reg_2608 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_sum_reg_2618 : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter4_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter5_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter6_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter7_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter8_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter9_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter10_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter11_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter12_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter13_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter14_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal log_sum_reg_2618_pp0_iter15_reg : STD_LOGIC_VECTOR (36 downto 0);
    signal a_reg_2628 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2628_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_48_reg_2634 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_49_reg_2640 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_2645 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_52_reg_2650 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_52_reg_2650_pp0_iter8_reg : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_52_reg_2650_pp0_iter9_reg : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln156_fu_2163_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal select_ln156_reg_2655 : STD_LOGIC_VECTOR (42 downto 0);
    signal select_ln156_reg_2655_pp0_iter9_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_2176_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln158_reg_2670 : STD_LOGIC_VECTOR (41 downto 0);
    signal a_1_reg_2675 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2675_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2675_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2675_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_reg_2681 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_53_reg_2681_pp0_iter11_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_53_reg_2681_pp0_iter12_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_54_reg_2687 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_reg_2687_pp0_iter11_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_reg_2687_pp0_iter12_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln158_1_reg_2702 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_55_reg_2707 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_55_reg_2707_pp0_iter14_reg : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_56_reg_2712 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln_reg_2722 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln964_1_fu_2375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln964_1_reg_2732 : STD_LOGIC_VECTOR (31 downto 0);
    signal log_base_fu_2393_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal log_base_reg_2737 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_589_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln970_1_reg_2752 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_598_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln970_reg_2757 : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_phi_mux_b_frac_07_phi_fu_401_p54 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_phi_reg_pp0_iter1_b_frac_07_reg_398 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_phi_reg_pp0_iter0_b_frac_07_reg_398 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_2_fu_1785_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_3_fu_1797_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_4_fu_1809_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_5_fu_1821_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_6_fu_1833_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_7_fu_1845_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_8_fu_1857_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_9_fu_1869_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_10_fu_1881_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_11_fu_1893_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_12_fu_1905_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_13_fu_1917_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_14_fu_1929_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_15_fu_1941_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_16_fu_1953_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_17_fu_1965_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_18_fu_1977_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_19_fu_1989_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_20_fu_2001_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_21_fu_2013_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_22_fu_2025_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_23_fu_2037_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal b_frac_24_fu_2049_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_phi_mux_index0_2_phi_fu_461_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_index0_2_reg_458 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_47_fu_2058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter2_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter3_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter4_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter5_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter6_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter7_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter8_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter9_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter10_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter11_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter12_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter13_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter14_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter15_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter16_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter17_b_exp_05_reg_467 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_r_phi_fu_582_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter20_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter0_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter1_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter2_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter3_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter4_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter5_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter6_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter7_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter8_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter9_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter10_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter11_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter12_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter13_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter14_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter15_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter16_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter17_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter18_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter19_r_reg_578 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln160_1_fu_2310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_fu_2333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_589_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_594_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_594_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_598_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_603_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_frac_fu_614_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_s_fu_626_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_s_fu_636_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_1_fu_658_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_1_fu_668_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_2_fu_690_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_2_fu_700_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_3_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_2_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_736_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_3_fu_746_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_5_fu_760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_1_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_3_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_782_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_4_fu_792_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_7_fu_806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_2_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_4_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_828_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_5_fu_838_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_9_fu_852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_3_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_5_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_874_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_6_fu_884_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_11_fu_898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_4_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_6_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_920_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_7_fu_930_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_13_fu_944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_5_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_7_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_966_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_8_fu_976_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_15_fu_990_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_6_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_8_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1012_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_9_fu_1022_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_17_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_7_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_9_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1058_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_10_fu_1068_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_19_fu_1082_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_8_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_10_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1104_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_11_fu_1114_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_21_fu_1128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_9_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_11_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1150_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_12_fu_1160_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_23_fu_1174_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_10_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_12_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1196_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_13_fu_1206_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_25_fu_1220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_11_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_13_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1242_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_14_fu_1252_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_27_fu_1266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_12_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_14_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1288_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_15_fu_1298_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_29_fu_1312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_13_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_15_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1334_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_16_fu_1344_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_31_fu_1358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_14_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_16_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1380_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_17_fu_1390_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_33_fu_1404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_15_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_17_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1426_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_18_fu_1436_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_35_fu_1450_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_16_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_18_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1472_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_19_fu_1482_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_37_fu_1496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_17_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_19_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1518_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_20_fu_1528_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_39_fu_1542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_18_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_20_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1564_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_21_fu_1574_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_41_fu_1588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_19_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_21_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1610_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_22_fu_1620_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_43_fu_1634_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_20_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_22_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1656_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln923_23_fu_1666_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_45_fu_1680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_21_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_23_fu_1674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln918_24_fu_1702_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln918_s_fu_1706_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_46_fu_1720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln923_22_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_24_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln925_fu_1756_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln923_26_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln918_fu_1782_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln918_1_fu_1794_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln918_2_fu_1806_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln918_3_fu_1818_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln918_4_fu_1830_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln918_5_fu_1842_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln918_6_fu_1854_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln918_7_fu_1866_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln918_8_fu_1878_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln918_9_fu_1890_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln918_10_fu_1902_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln918_11_fu_1914_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln918_12_fu_1926_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln918_13_fu_1938_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln918_14_fu_1950_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln918_15_fu_1962_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln918_16_fu_1974_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln918_17_fu_1986_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln918_18_fu_1998_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln918_19_fu_2010_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln918_20_fu_2022_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln918_21_fu_2034_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln918_22_fu_2046_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_603_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal zext_ln156_cast_fu_2145_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_51_fu_2152_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal zext_ln156_fu_2159_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_2176_p0 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_2176_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln158_1_fu_2182_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal zext_ln158_fu_2189_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln158_fu_2193_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal zext_ln158_3_fu_2198_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sub_ln158_fu_2201_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal shl_ln158_2_fu_2252_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal eZ_fu_2245_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal zext_ln158_4_fu_2259_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal zext_ln158_5_fu_2263_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln_fu_2273_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln158_1_fu_2267_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal zext_ln158_8_fu_2280_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln158_1_fu_2284_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln962_fu_2317_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln962_fu_2314_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln962_fu_2317_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln962_fu_2317_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1_fu_2341_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln962_1_fu_2348_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal zext_ln962_2_fu_2352_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sub_ln962_fu_2355_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln962_1_fu_2361_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln253_1_fu_2337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln962_fu_2371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln253_fu_2381_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln964_fu_2390_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln964_fu_2385_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal shl_ln2_fu_2408_p3 : STD_LOGIC_VECTOR (83 downto 0);
    signal sext_ln970_2_fu_2415_p1 : STD_LOGIC_VECTOR (83 downto 0);
    signal add_ln970_fu_2418_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to19 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_2176_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_2176_p10 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_594_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_594_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_603_p10 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_condition_1876 : BOOLEAN;
    signal ap_condition_1881 : BOOLEAN;
    signal ap_condition_1886 : BOOLEAN;
    signal ap_condition_1892 : BOOLEAN;
    signal ap_condition_1899 : BOOLEAN;
    signal ap_condition_1907 : BOOLEAN;
    signal ap_condition_1916 : BOOLEAN;
    signal ap_condition_1926 : BOOLEAN;
    signal ap_condition_1937 : BOOLEAN;
    signal ap_condition_1949 : BOOLEAN;
    signal ap_condition_1962 : BOOLEAN;
    signal ap_condition_1976 : BOOLEAN;
    signal ap_condition_1991 : BOOLEAN;
    signal ap_condition_2007 : BOOLEAN;
    signal ap_condition_2024 : BOOLEAN;
    signal ap_condition_2042 : BOOLEAN;
    signal ap_condition_2061 : BOOLEAN;
    signal ap_condition_2081 : BOOLEAN;
    signal ap_condition_2102 : BOOLEAN;
    signal ap_condition_2124 : BOOLEAN;
    signal ap_condition_2147 : BOOLEAN;
    signal ap_condition_2171 : BOOLEAN;
    signal ap_condition_344 : BOOLEAN;
    signal ap_condition_405 : BOOLEAN;
    signal ap_condition_548 : BOOLEAN;
    signal ap_condition_396 : BOOLEAN;
    signal ap_condition_392 : BOOLEAN;
    signal ap_condition_409 : BOOLEAN;
    signal ap_condition_413 : BOOLEAN;
    signal ap_condition_417 : BOOLEAN;
    signal ap_condition_421 : BOOLEAN;
    signal ap_condition_425 : BOOLEAN;
    signal ap_condition_429 : BOOLEAN;
    signal ap_condition_433 : BOOLEAN;
    signal ap_condition_437 : BOOLEAN;
    signal ap_condition_441 : BOOLEAN;
    signal ap_condition_445 : BOOLEAN;
    signal ap_condition_449 : BOOLEAN;
    signal ap_condition_453 : BOOLEAN;
    signal ap_condition_457 : BOOLEAN;
    signal ap_condition_461 : BOOLEAN;
    signal ap_condition_465 : BOOLEAN;
    signal ap_condition_469 : BOOLEAN;
    signal ap_condition_473 : BOOLEAN;
    signal ap_condition_477 : BOOLEAN;
    signal ap_condition_481 : BOOLEAN;
    signal ap_condition_485 : BOOLEAN;
    signal ap_condition_489 : BOOLEAN;
    signal ap_condition_493 : BOOLEAN;
    signal ap_condition_497 : BOOLEAN;
    signal ap_condition_338 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dbfs_converter_mul_6s_43ns_47_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component dbfs_converter_mul_30ns_6ns_36_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component dbfs_converter_mul_37s_43ns_79_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (36 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component dbfs_converter_mul_58s_6ns_58_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (57 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component dbfs_converter_mul_38ns_4ns_42_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (37 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component dbfs_converter_mul_14ns_14ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_inverse_lut_table_array_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ROM_AUTbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ROM_AUTOcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ROM_AUTOdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    log_apfixed_reduce_log_inverse_lut_table_array_U : component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_inverse_lut_table_array_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_inverse_lut_table_array_address0,
        ce0 => log_apfixed_reduce_log_inverse_lut_table_array_ce0,
        q0 => log_apfixed_reduce_log_inverse_lut_table_array_q0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_U : component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ROM_AUTbkb
    generic map (
        DataWidth => 37,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_address0,
        ce0 => log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ce0,
        q0 => log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_q0);

    log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_U : component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ROM_AUTOcud
    generic map (
        DataWidth => 33,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_address0,
        ce0 => log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ce0,
        q0 => log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_q0);

    log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_U : component dbfs_converter_log10_48_24_s_log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ROM_AUTOdEe
    generic map (
        DataWidth => 30,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_address0,
        ce0 => log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ce0,
        q0 => log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_q0);

    mul_6s_43ns_47_3_1_U1 : component dbfs_converter_mul_6s_43ns_47_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 6,
        din1_WIDTH => 43,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_phi_reg_pp0_iter17_b_exp_05_reg_467,
        din1 => grp_fu_589_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_589_p2);

    mul_30ns_6ns_36_2_1_U2 : component dbfs_converter_mul_30ns_6ns_36_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 6,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_594_p0,
        din1 => grp_fu_594_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_594_p2);

    mul_37s_43ns_79_3_1_U3 : component dbfs_converter_mul_37s_43ns_79_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 37,
        din1_WIDTH => 43,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => log_base_reg_2737,
        din1 => grp_fu_598_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_598_p2);

    mul_58s_6ns_58_5_1_U4 : component dbfs_converter_mul_58s_6ns_58_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 58,
        din1_WIDTH => 6,
        dout_WIDTH => 58)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => b_frac_07_reg_398_pp0_iter2_reg,
        din1 => grp_fu_603_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_603_p2);

    mul_38ns_4ns_42_2_1_U5 : component dbfs_converter_mul_38ns_4ns_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 38,
        din1_WIDTH => 4,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2176_p0,
        din1 => grp_fu_2176_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2176_p2);

    mul_14ns_14ns_28_1_1_U6 : component dbfs_converter_mul_14ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln962_fu_2317_p0,
        din1 => mul_ln962_fu_2317_p1,
        dout => mul_ln962_fu_2317_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_b_exp_05_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_396)) then
                if ((ap_const_boolean_1 = ap_condition_548)) then 
                    ap_phi_reg_pp0_iter1_b_exp_05_reg_467 <= ap_const_lv6_29;
                elsif ((ap_const_boolean_1 = ap_condition_405)) then 
                    ap_phi_reg_pp0_iter1_b_exp_05_reg_467 <= ap_const_lv6_1;
                elsif (((icmp_ln923_fu_644_p2 = ap_const_lv1_1) and (icmp_ln899_fu_608_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_b_exp_05_reg_467 <= ap_const_lv6_2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter0_b_exp_05_reg_467;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_b_frac_07_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_396)) then
                if ((ap_const_boolean_1 = ap_condition_548)) then 
                    ap_phi_reg_pp0_iter1_b_frac_07_reg_398 <= b_frac_25_fu_1742_p3;
                elsif ((ap_const_boolean_1 = ap_condition_405)) then 
                    ap_phi_reg_pp0_iter1_b_frac_07_reg_398 <= b_frac_1_fu_650_p3;
                elsif (((icmp_ln923_fu_644_p2 = ap_const_lv1_1) and (icmp_ln899_fu_608_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_b_frac_07_reg_398 <= zext_ln925_fu_622_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_b_frac_07_reg_398 <= ap_phi_reg_pp0_iter0_b_frac_07_reg_398;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_396)) then
                if ((icmp_ln899_fu_608_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_r_reg_578 <= ap_const_lv28_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_reg_578 <= ap_phi_reg_pp0_iter0_r_reg_578;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_b_exp_05_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_338)) then
                if ((ap_const_boolean_1 = ap_condition_497)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2A;
                elsif ((ap_const_boolean_1 = ap_condition_493)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2B;
                elsif ((ap_const_boolean_1 = ap_condition_489)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2C;
                elsif ((ap_const_boolean_1 = ap_condition_485)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2D;
                elsif ((ap_const_boolean_1 = ap_condition_481)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2E;
                elsif ((ap_const_boolean_1 = ap_condition_477)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_2F;
                elsif ((ap_const_boolean_1 = ap_condition_473)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_30;
                elsif ((ap_const_boolean_1 = ap_condition_469)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_31;
                elsif ((ap_const_boolean_1 = ap_condition_465)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_32;
                elsif ((ap_const_boolean_1 = ap_condition_461)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_33;
                elsif ((ap_const_boolean_1 = ap_condition_457)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_34;
                elsif ((ap_const_boolean_1 = ap_condition_453)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_35;
                elsif ((ap_const_boolean_1 = ap_condition_449)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_36;
                elsif ((ap_const_boolean_1 = ap_condition_445)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_37;
                elsif ((ap_const_boolean_1 = ap_condition_441)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_38;
                elsif ((ap_const_boolean_1 = ap_condition_437)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_39;
                elsif ((ap_const_boolean_1 = ap_condition_433)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3A;
                elsif ((ap_const_boolean_1 = ap_condition_429)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3B;
                elsif ((ap_const_boolean_1 = ap_condition_425)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3C;
                elsif ((ap_const_boolean_1 = ap_condition_421)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3D;
                elsif ((ap_const_boolean_1 = ap_condition_417)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3E;
                elsif ((ap_const_boolean_1 = ap_condition_413)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_3F;
                elsif ((ap_const_boolean_1 = ap_condition_409)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_const_lv6_0;
                elsif ((ap_const_boolean_1 = ap_condition_392)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= select_ln923_23_reg_2590;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter1_b_exp_05_reg_467;
                end if;
            end if; 
        end if;
    end process;

    b_frac_07_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_338)) then
                if ((ap_const_boolean_1 = ap_condition_497)) then 
                    b_frac_07_reg_398 <= b_frac_24_fu_2049_p3;
                elsif ((ap_const_boolean_1 = ap_condition_493)) then 
                    b_frac_07_reg_398 <= b_frac_23_fu_2037_p3;
                elsif ((ap_const_boolean_1 = ap_condition_489)) then 
                    b_frac_07_reg_398 <= b_frac_22_fu_2025_p3;
                elsif ((ap_const_boolean_1 = ap_condition_485)) then 
                    b_frac_07_reg_398 <= b_frac_21_fu_2013_p3;
                elsif ((ap_const_boolean_1 = ap_condition_481)) then 
                    b_frac_07_reg_398 <= b_frac_20_fu_2001_p3;
                elsif ((ap_const_boolean_1 = ap_condition_477)) then 
                    b_frac_07_reg_398 <= b_frac_19_fu_1989_p3;
                elsif ((ap_const_boolean_1 = ap_condition_473)) then 
                    b_frac_07_reg_398 <= b_frac_18_fu_1977_p3;
                elsif ((ap_const_boolean_1 = ap_condition_469)) then 
                    b_frac_07_reg_398 <= b_frac_17_fu_1965_p3;
                elsif ((ap_const_boolean_1 = ap_condition_465)) then 
                    b_frac_07_reg_398 <= b_frac_16_fu_1953_p3;
                elsif ((ap_const_boolean_1 = ap_condition_461)) then 
                    b_frac_07_reg_398 <= b_frac_15_fu_1941_p3;
                elsif ((ap_const_boolean_1 = ap_condition_457)) then 
                    b_frac_07_reg_398 <= b_frac_14_fu_1929_p3;
                elsif ((ap_const_boolean_1 = ap_condition_453)) then 
                    b_frac_07_reg_398 <= b_frac_13_fu_1917_p3;
                elsif ((ap_const_boolean_1 = ap_condition_449)) then 
                    b_frac_07_reg_398 <= b_frac_12_fu_1905_p3;
                elsif ((ap_const_boolean_1 = ap_condition_445)) then 
                    b_frac_07_reg_398 <= b_frac_11_fu_1893_p3;
                elsif ((ap_const_boolean_1 = ap_condition_441)) then 
                    b_frac_07_reg_398 <= b_frac_10_fu_1881_p3;
                elsif ((ap_const_boolean_1 = ap_condition_437)) then 
                    b_frac_07_reg_398 <= b_frac_9_fu_1869_p3;
                elsif ((ap_const_boolean_1 = ap_condition_433)) then 
                    b_frac_07_reg_398 <= b_frac_8_fu_1857_p3;
                elsif ((ap_const_boolean_1 = ap_condition_429)) then 
                    b_frac_07_reg_398 <= b_frac_7_fu_1845_p3;
                elsif ((ap_const_boolean_1 = ap_condition_425)) then 
                    b_frac_07_reg_398 <= b_frac_6_fu_1833_p3;
                elsif ((ap_const_boolean_1 = ap_condition_421)) then 
                    b_frac_07_reg_398 <= b_frac_5_fu_1821_p3;
                elsif ((ap_const_boolean_1 = ap_condition_417)) then 
                    b_frac_07_reg_398 <= b_frac_4_fu_1809_p3;
                elsif ((ap_const_boolean_1 = ap_condition_413)) then 
                    b_frac_07_reg_398 <= b_frac_3_fu_1797_p3;
                elsif ((ap_const_boolean_1 = ap_condition_409)) then 
                    b_frac_07_reg_398 <= b_frac_2_fu_1785_p3;
                elsif ((ap_const_boolean_1 = ap_condition_392)) then 
                    b_frac_07_reg_398 <= b_frac_26_reg_2585;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    b_frac_07_reg_398 <= ap_phi_reg_pp0_iter1_b_frac_07_reg_398;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                a_1_reg_2675 <= sub_ln158_fu_2201_p2(42 downto 37);
                a_1_reg_2675_pp0_iter11_reg <= a_1_reg_2675;
                a_1_reg_2675_pp0_iter12_reg <= a_1_reg_2675_pp0_iter11_reg;
                a_1_reg_2675_pp0_iter13_reg <= a_1_reg_2675_pp0_iter12_reg;
                a_reg_2628 <= grp_fu_603_p2(57 downto 54);
                a_reg_2628_pp0_iter10_reg <= a_reg_2628_pp0_iter9_reg;
                a_reg_2628_pp0_iter11_reg <= a_reg_2628_pp0_iter10_reg;
                a_reg_2628_pp0_iter12_reg <= a_reg_2628_pp0_iter11_reg;
                a_reg_2628_pp0_iter13_reg <= a_reg_2628_pp0_iter12_reg;
                a_reg_2628_pp0_iter14_reg <= a_reg_2628_pp0_iter13_reg;
                a_reg_2628_pp0_iter8_reg <= a_reg_2628;
                a_reg_2628_pp0_iter9_reg <= a_reg_2628_pp0_iter8_reg;
                add_ln964_1_reg_2732 <= add_ln964_1_fu_2375_p2;
                b_frac_07_reg_398_pp0_iter2_reg <= b_frac_07_reg_398;
                b_frac_tilde_inverse_reg_2608 <= log_apfixed_reduce_log_inverse_lut_table_array_q0;
                icmp_ln899_reg_2462_pp0_iter10_reg <= icmp_ln899_reg_2462_pp0_iter9_reg;
                icmp_ln899_reg_2462_pp0_iter11_reg <= icmp_ln899_reg_2462_pp0_iter10_reg;
                icmp_ln899_reg_2462_pp0_iter12_reg <= icmp_ln899_reg_2462_pp0_iter11_reg;
                icmp_ln899_reg_2462_pp0_iter13_reg <= icmp_ln899_reg_2462_pp0_iter12_reg;
                icmp_ln899_reg_2462_pp0_iter14_reg <= icmp_ln899_reg_2462_pp0_iter13_reg;
                icmp_ln899_reg_2462_pp0_iter15_reg <= icmp_ln899_reg_2462_pp0_iter14_reg;
                icmp_ln899_reg_2462_pp0_iter16_reg <= icmp_ln899_reg_2462_pp0_iter15_reg;
                icmp_ln899_reg_2462_pp0_iter17_reg <= icmp_ln899_reg_2462_pp0_iter16_reg;
                icmp_ln899_reg_2462_pp0_iter18_reg <= icmp_ln899_reg_2462_pp0_iter17_reg;
                icmp_ln899_reg_2462_pp0_iter19_reg <= icmp_ln899_reg_2462_pp0_iter18_reg;
                icmp_ln899_reg_2462_pp0_iter2_reg <= icmp_ln899_reg_2462_pp0_iter1_reg;
                icmp_ln899_reg_2462_pp0_iter3_reg <= icmp_ln899_reg_2462_pp0_iter2_reg;
                icmp_ln899_reg_2462_pp0_iter4_reg <= icmp_ln899_reg_2462_pp0_iter3_reg;
                icmp_ln899_reg_2462_pp0_iter5_reg <= icmp_ln899_reg_2462_pp0_iter4_reg;
                icmp_ln899_reg_2462_pp0_iter6_reg <= icmp_ln899_reg_2462_pp0_iter5_reg;
                icmp_ln899_reg_2462_pp0_iter7_reg <= icmp_ln899_reg_2462_pp0_iter6_reg;
                icmp_ln899_reg_2462_pp0_iter8_reg <= icmp_ln899_reg_2462_pp0_iter7_reg;
                icmp_ln899_reg_2462_pp0_iter9_reg <= icmp_ln899_reg_2462_pp0_iter8_reg;
                log_base_reg_2737 <= log_base_fu_2393_p2;
                log_sum_reg_2618 <= log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_q0;
                log_sum_reg_2618_pp0_iter10_reg <= log_sum_reg_2618_pp0_iter9_reg;
                log_sum_reg_2618_pp0_iter11_reg <= log_sum_reg_2618_pp0_iter10_reg;
                log_sum_reg_2618_pp0_iter12_reg <= log_sum_reg_2618_pp0_iter11_reg;
                log_sum_reg_2618_pp0_iter13_reg <= log_sum_reg_2618_pp0_iter12_reg;
                log_sum_reg_2618_pp0_iter14_reg <= log_sum_reg_2618_pp0_iter13_reg;
                log_sum_reg_2618_pp0_iter15_reg <= log_sum_reg_2618_pp0_iter14_reg;
                log_sum_reg_2618_pp0_iter4_reg <= log_sum_reg_2618;
                log_sum_reg_2618_pp0_iter5_reg <= log_sum_reg_2618_pp0_iter4_reg;
                log_sum_reg_2618_pp0_iter6_reg <= log_sum_reg_2618_pp0_iter5_reg;
                log_sum_reg_2618_pp0_iter7_reg <= log_sum_reg_2618_pp0_iter6_reg;
                log_sum_reg_2618_pp0_iter8_reg <= log_sum_reg_2618_pp0_iter7_reg;
                log_sum_reg_2618_pp0_iter9_reg <= log_sum_reg_2618_pp0_iter8_reg;
                lshr_ln_reg_2722 <= mul_ln962_fu_2317_p2(27 downto 1);
                mul_ln158_1_reg_2702 <= grp_fu_594_p2;
                mul_ln158_reg_2670 <= grp_fu_2176_p2;
                mul_ln970_1_reg_2752 <= grp_fu_589_p2;
                mul_ln970_reg_2757 <= grp_fu_598_p2;
                    select_ln156_reg_2655(37 downto 0) <= select_ln156_fu_2163_p3(37 downto 0);    select_ln156_reg_2655(42 downto 41) <= select_ln156_fu_2163_p3(42 downto 41);
                    select_ln156_reg_2655_pp0_iter9_reg(37 downto 0) <= select_ln156_reg_2655(37 downto 0);    select_ln156_reg_2655_pp0_iter9_reg(42 downto 41) <= select_ln156_reg_2655(42 downto 41);
                tmp_48_reg_2634 <= grp_fu_603_p2(57 downto 20);
                tmp_49_reg_2640 <= grp_fu_603_p2(57 downto 57);
                tmp_50_reg_2645 <= grp_fu_603_p2(57 downto 21);
                tmp_52_reg_2650 <= grp_fu_603_p2(53 downto 20);
                tmp_52_reg_2650_pp0_iter8_reg <= tmp_52_reg_2650;
                tmp_52_reg_2650_pp0_iter9_reg <= tmp_52_reg_2650_pp0_iter8_reg;
                tmp_53_reg_2681 <= sub_ln158_fu_2201_p2(42 downto 13);
                tmp_53_reg_2681_pp0_iter11_reg <= tmp_53_reg_2681;
                tmp_53_reg_2681_pp0_iter12_reg <= tmp_53_reg_2681_pp0_iter11_reg;
                tmp_54_reg_2687 <= sub_ln158_fu_2201_p2(36 downto 13);
                tmp_54_reg_2687_pp0_iter11_reg <= tmp_54_reg_2687;
                tmp_54_reg_2687_pp0_iter12_reg <= tmp_54_reg_2687_pp0_iter11_reg;
                tmp_55_reg_2707 <= sub_ln158_1_fu_2284_p2(38 downto 14);
                tmp_55_reg_2707_pp0_iter14_reg <= tmp_55_reg_2707;
                tmp_56_reg_2712 <= sub_ln158_1_fu_2284_p2(38 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter9_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter10_r_reg_578 <= ap_phi_reg_pp0_iter9_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter11_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter10_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter11_r_reg_578 <= ap_phi_reg_pp0_iter10_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter12_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter11_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter12_r_reg_578 <= ap_phi_reg_pp0_iter11_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter13_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter12_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter13_r_reg_578 <= ap_phi_reg_pp0_iter12_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter14_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter13_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter14_r_reg_578 <= ap_phi_reg_pp0_iter13_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter15_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter14_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter15_r_reg_578 <= ap_phi_reg_pp0_iter14_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter16_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter15_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter16_r_reg_578 <= ap_phi_reg_pp0_iter15_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter17_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter16_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter17_r_reg_578 <= ap_phi_reg_pp0_iter16_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter18_r_reg_578 <= ap_phi_reg_pp0_iter17_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter19_r_reg_578 <= ap_phi_reg_pp0_iter18_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter20_r_reg_578 <= ap_phi_reg_pp0_iter19_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_r_reg_578 <= ap_phi_reg_pp0_iter1_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter2_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter3_r_reg_578 <= ap_phi_reg_pp0_iter2_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter3_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter4_r_reg_578 <= ap_phi_reg_pp0_iter3_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter4_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter5_r_reg_578 <= ap_phi_reg_pp0_iter4_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter5_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter6_r_reg_578 <= ap_phi_reg_pp0_iter5_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter6_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter7_r_reg_578 <= ap_phi_reg_pp0_iter6_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter7_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter8_r_reg_578 <= ap_phi_reg_pp0_iter7_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_b_exp_05_reg_467 <= ap_phi_reg_pp0_iter8_b_exp_05_reg_467;
                ap_phi_reg_pp0_iter9_r_reg_578 <= ap_phi_reg_pp0_iter8_r_reg_578;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    b_frac_26_reg_2585(57) <= b_frac_26_fu_1760_p3(57);
                icmp_ln899_reg_2462 <= icmp_ln899_fu_608_p2;
                icmp_ln899_reg_2462_pp0_iter1_reg <= icmp_ln899_reg_2462;
                icmp_ln923_1_reg_2480 <= icmp_ln923_1_fu_676_p2;
                icmp_ln923_25_reg_2581 <= icmp_ln923_25_fu_1750_p2;
                icmp_ln923_reg_2471 <= icmp_ln923_fu_644_p2;
                select_ln923_10_reg_2524 <= select_ln923_10_fu_1188_p3;
                select_ln923_11_reg_2528 <= select_ln923_11_fu_1234_p3;
                select_ln923_12_reg_2532 <= select_ln923_12_fu_1280_p3;
                select_ln923_13_reg_2536 <= select_ln923_13_fu_1326_p3;
                select_ln923_14_reg_2540 <= select_ln923_14_fu_1372_p3;
                select_ln923_15_reg_2544 <= select_ln923_15_fu_1418_p3;
                select_ln923_16_reg_2548 <= select_ln923_16_fu_1464_p3;
                select_ln923_17_reg_2552 <= select_ln923_17_fu_1510_p3;
                select_ln923_18_reg_2556 <= select_ln923_18_fu_1556_p3;
                select_ln923_19_reg_2560 <= select_ln923_19_fu_1602_p3;
                select_ln923_1_reg_2488 <= select_ln923_1_fu_774_p3;
                select_ln923_20_reg_2564 <= select_ln923_20_fu_1648_p3;
                select_ln923_21_reg_2568 <= select_ln923_21_fu_1694_p3;
                select_ln923_22_reg_2572 <= select_ln923_22_fu_1734_p3;
                    select_ln923_23_reg_2590(3 downto 0) <= select_ln923_23_fu_1774_p3(3 downto 0);
                select_ln923_2_reg_2492 <= select_ln923_2_fu_820_p3;
                select_ln923_3_reg_2496 <= select_ln923_3_fu_866_p3;
                select_ln923_4_reg_2500 <= select_ln923_4_fu_912_p3;
                select_ln923_5_reg_2504 <= select_ln923_5_fu_958_p3;
                select_ln923_6_reg_2508 <= select_ln923_6_fu_1004_p3;
                select_ln923_7_reg_2512 <= select_ln923_7_fu_1050_p3;
                select_ln923_8_reg_2516 <= select_ln923_8_fu_1096_p3;
                select_ln923_9_reg_2520 <= select_ln923_9_fu_1142_p3;
                select_ln923_reg_2484 <= select_ln923_fu_728_p3;
                x_val_read_reg_2435 <= x_val;
                    zext_ln946_reg_2598(5 downto 0) <= zext_ln946_fu_2088_p1(5 downto 0);
            end if;
        end if;
    end process;
    b_frac_26_reg_2585(56 downto 0) <= "000000000000000000000000000000000000000000000000000000000";
    select_ln923_23_reg_2590(5 downto 4) <= "10";
    zext_ln946_reg_2598(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    select_ln156_reg_2655(40 downto 38) <= "000";
    select_ln156_reg_2655_pp0_iter9_reg(40 downto 38) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln158_1_fu_2267_p2 <= std_logic_vector(unsigned(zext_ln158_4_fu_2259_p1) + unsigned(zext_ln158_5_fu_2263_p1));
    add_ln158_fu_2193_p2 <= std_logic_vector(unsigned(zext_ln158_fu_2189_p1) + unsigned(select_ln156_reg_2655_pp0_iter9_reg));
    add_ln964_1_fu_2375_p2 <= std_logic_vector(unsigned(zext_ln253_1_fu_2337_p1) + unsigned(sext_ln962_fu_2371_p1));
    add_ln964_fu_2385_p2 <= std_logic_vector(unsigned(zext_ln253_fu_2381_p1) + unsigned(log_sum_reg_2618_pp0_iter15_reg));
    add_ln970_fu_2418_p2 <= std_logic_vector(unsigned(shl_ln2_fu_2408_p3) + unsigned(sext_ln970_2_fu_2415_p1));
    and_ln923_10_fu_1068_p3 <= (tmp_18_fu_1058_p4 & ap_const_lv55_0);
    and_ln923_11_fu_1114_p3 <= (tmp_20_fu_1104_p4 & ap_const_lv55_0);
    and_ln923_12_fu_1160_p3 <= (tmp_22_fu_1150_p4 & ap_const_lv55_0);
    and_ln923_13_fu_1206_p3 <= (tmp_24_fu_1196_p4 & ap_const_lv55_0);
    and_ln923_14_fu_1252_p3 <= (tmp_26_fu_1242_p4 & ap_const_lv55_0);
    and_ln923_15_fu_1298_p3 <= (tmp_28_fu_1288_p4 & ap_const_lv55_0);
    and_ln923_16_fu_1344_p3 <= (tmp_30_fu_1334_p4 & ap_const_lv55_0);
    and_ln923_17_fu_1390_p3 <= (tmp_32_fu_1380_p4 & ap_const_lv55_0);
    and_ln923_18_fu_1436_p3 <= (tmp_34_fu_1426_p4 & ap_const_lv55_0);
    and_ln923_19_fu_1482_p3 <= (tmp_36_fu_1472_p4 & ap_const_lv55_0);
    and_ln923_1_fu_668_p3 <= (tmp_1_fu_658_p4 & ap_const_lv55_0);
    and_ln923_20_fu_1528_p3 <= (tmp_38_fu_1518_p4 & ap_const_lv55_0);
    and_ln923_21_fu_1574_p3 <= (tmp_40_fu_1564_p4 & ap_const_lv55_0);
    and_ln923_22_fu_1620_p3 <= (tmp_42_fu_1610_p4 & ap_const_lv55_0);
    and_ln923_23_fu_1666_p3 <= (tmp_44_fu_1656_p4 & ap_const_lv55_0);
    and_ln923_2_fu_700_p3 <= (tmp_2_fu_690_p4 & ap_const_lv55_0);
    and_ln923_3_fu_746_p3 <= (tmp_4_fu_736_p4 & ap_const_lv55_0);
    and_ln923_4_fu_792_p3 <= (tmp_6_fu_782_p4 & ap_const_lv55_0);
    and_ln923_5_fu_838_p3 <= (tmp_8_fu_828_p4 & ap_const_lv55_0);
    and_ln923_6_fu_884_p3 <= (tmp_10_fu_874_p4 & ap_const_lv55_0);
    and_ln923_7_fu_930_p3 <= (tmp_12_fu_920_p4 & ap_const_lv55_0);
    and_ln923_8_fu_976_p3 <= (tmp_14_fu_966_p4 & ap_const_lv55_0);
    and_ln923_9_fu_1022_p3 <= (tmp_16_fu_1012_p4 & ap_const_lv55_0);
    and_ln923_s_fu_636_p3 <= (tmp_s_fu_626_p4 & ap_const_lv55_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1876_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568, select_ln923_22_reg_2572, icmp_ln923_25_reg_2581)
    begin
                ap_condition_1876 <= ((icmp_ln923_25_reg_2581 = ap_const_lv1_0) and (select_ln923_22_reg_2572 = ap_const_lv1_0) and (select_ln923_21_reg_2568 = ap_const_lv1_0) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 
    = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1881_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492)
    begin
                ap_condition_1881 <= ((select_ln923_2_reg_2492 = ap_const_lv1_1) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1886_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496)
    begin
                ap_condition_1886 <= ((select_ln923_3_reg_2496 = ap_const_lv1_1) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1892_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500)
    begin
                ap_condition_1892 <= ((select_ln923_4_reg_2500 = ap_const_lv1_1) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1899_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504)
    begin
                ap_condition_1899 <= ((select_ln923_5_reg_2504 = ap_const_lv1_1) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1907_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508)
    begin
                ap_condition_1907 <= ((select_ln923_6_reg_2508 = ap_const_lv1_1) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1916_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512)
    begin
                ap_condition_1916 <= ((select_ln923_7_reg_2512 = ap_const_lv1_1) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1926_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516)
    begin
                ap_condition_1926 <= ((select_ln923_8_reg_2516 = ap_const_lv1_1) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1937_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520)
    begin
                ap_condition_1937 <= ((select_ln923_9_reg_2520 = ap_const_lv1_1) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1949_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524)
    begin
                ap_condition_1949 <= ((select_ln923_10_reg_2524 = ap_const_lv1_1) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1962_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528)
    begin
                ap_condition_1962 <= ((select_ln923_11_reg_2528 = ap_const_lv1_1) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1976_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532)
    begin
                ap_condition_1976 <= ((select_ln923_12_reg_2532 = ap_const_lv1_1) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_1991_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536)
    begin
                ap_condition_1991 <= ((select_ln923_13_reg_2536 = ap_const_lv1_1) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2007_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540)
    begin
                ap_condition_2007 <= ((select_ln923_14_reg_2540 = ap_const_lv1_1) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2024_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544)
    begin
                ap_condition_2024 <= ((select_ln923_15_reg_2544 = ap_const_lv1_1) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2042_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548)
    begin
                ap_condition_2042 <= ((select_ln923_16_reg_2548 = ap_const_lv1_1) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2061_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552)
    begin
                ap_condition_2061 <= ((select_ln923_17_reg_2552 = ap_const_lv1_1) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2081_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556)
    begin
                ap_condition_2081 <= ((select_ln923_18_reg_2556 = ap_const_lv1_1) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2102_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560)
    begin
                ap_condition_2102 <= ((select_ln923_19_reg_2560 = ap_const_lv1_1) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2124_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564)
    begin
                ap_condition_2124 <= ((select_ln923_20_reg_2564 = ap_const_lv1_1) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_2147_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568)
    begin
                ap_condition_2147 <= ((select_ln923_21_reg_2568 = ap_const_lv1_1) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = 
    ap_const_lv1_0));
    end process;


    ap_condition_2171_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568, select_ln923_22_reg_2572)
    begin
                ap_condition_2171 <= ((select_ln923_22_reg_2572 = ap_const_lv1_1) and (select_ln923_21_reg_2568 = ap_const_lv1_0) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 
    = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0));
    end process;


    ap_condition_338_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_338 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_344_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480)
    begin
                ap_condition_344 <= ((icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_392_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568, select_ln923_22_reg_2572, icmp_ln923_25_reg_2581)
    begin
                ap_condition_392 <= ((icmp_ln923_25_reg_2581 = ap_const_lv1_0) and (select_ln923_22_reg_2572 = ap_const_lv1_0) and (select_ln923_21_reg_2568 = ap_const_lv1_0) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 
    = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_396_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_396 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_405_assign_proc : process(icmp_ln899_fu_608_p2, icmp_ln923_fu_644_p2, icmp_ln923_1_fu_676_p2)
    begin
                ap_condition_405 <= ((icmp_ln923_1_fu_676_p2 = ap_const_lv1_1) and (icmp_ln923_fu_644_p2 = ap_const_lv1_0) and (icmp_ln899_fu_608_p2 = ap_const_lv1_0));
    end process;


    ap_condition_409_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484)
    begin
                ap_condition_409 <= ((select_ln923_reg_2484 = ap_const_lv1_1) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_413_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488)
    begin
                ap_condition_413 <= ((select_ln923_1_reg_2488 = ap_const_lv1_1) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_417_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492)
    begin
                ap_condition_417 <= ((select_ln923_2_reg_2492 = ap_const_lv1_1) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_421_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496)
    begin
                ap_condition_421 <= ((select_ln923_3_reg_2496 = ap_const_lv1_1) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_425_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500)
    begin
                ap_condition_425 <= ((select_ln923_4_reg_2500 = ap_const_lv1_1) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_429_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504)
    begin
                ap_condition_429 <= ((select_ln923_5_reg_2504 = ap_const_lv1_1) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_433_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508)
    begin
                ap_condition_433 <= ((select_ln923_6_reg_2508 = ap_const_lv1_1) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_437_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512)
    begin
                ap_condition_437 <= ((select_ln923_7_reg_2512 = ap_const_lv1_1) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_441_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516)
    begin
                ap_condition_441 <= ((select_ln923_8_reg_2516 = ap_const_lv1_1) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_445_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520)
    begin
                ap_condition_445 <= ((select_ln923_9_reg_2520 = ap_const_lv1_1) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_449_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524)
    begin
                ap_condition_449 <= ((select_ln923_10_reg_2524 = ap_const_lv1_1) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_453_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528)
    begin
                ap_condition_453 <= ((select_ln923_11_reg_2528 = ap_const_lv1_1) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_457_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532)
    begin
                ap_condition_457 <= ((select_ln923_12_reg_2532 = ap_const_lv1_1) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_461_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536)
    begin
                ap_condition_461 <= ((select_ln923_13_reg_2536 = ap_const_lv1_1) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_465_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540)
    begin
                ap_condition_465 <= ((select_ln923_14_reg_2540 = ap_const_lv1_1) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_469_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544)
    begin
                ap_condition_469 <= ((select_ln923_15_reg_2544 = ap_const_lv1_1) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_473_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548)
    begin
                ap_condition_473 <= ((select_ln923_16_reg_2548 = ap_const_lv1_1) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_477_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552)
    begin
                ap_condition_477 <= ((select_ln923_17_reg_2552 = ap_const_lv1_1) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_481_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556)
    begin
                ap_condition_481 <= ((select_ln923_18_reg_2556 = ap_const_lv1_1) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_485_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560)
    begin
                ap_condition_485 <= ((select_ln923_19_reg_2560 = ap_const_lv1_1) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) 
    and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_489_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564)
    begin
                ap_condition_489 <= ((select_ln923_20_reg_2564 = ap_const_lv1_1) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) 
    and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_493_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568)
    begin
                ap_condition_493 <= ((select_ln923_21_reg_2568 = ap_const_lv1_1) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 = ap_const_lv1_0) and (select_ln923_reg_2484 = 
    ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_497_assign_proc : process(icmp_ln899_reg_2462, icmp_ln923_reg_2471, icmp_ln923_1_reg_2480, select_ln923_reg_2484, select_ln923_1_reg_2488, select_ln923_2_reg_2492, select_ln923_3_reg_2496, select_ln923_4_reg_2500, select_ln923_5_reg_2504, select_ln923_6_reg_2508, select_ln923_7_reg_2512, select_ln923_8_reg_2516, select_ln923_9_reg_2520, select_ln923_10_reg_2524, select_ln923_11_reg_2528, select_ln923_12_reg_2532, select_ln923_13_reg_2536, select_ln923_14_reg_2540, select_ln923_15_reg_2544, select_ln923_16_reg_2548, select_ln923_17_reg_2552, select_ln923_18_reg_2556, select_ln923_19_reg_2560, select_ln923_20_reg_2564, select_ln923_21_reg_2568, select_ln923_22_reg_2572)
    begin
                ap_condition_497 <= ((select_ln923_22_reg_2572 = ap_const_lv1_1) and (select_ln923_21_reg_2568 = ap_const_lv1_0) and (select_ln923_20_reg_2564 = ap_const_lv1_0) and (select_ln923_19_reg_2560 = ap_const_lv1_0) and (select_ln923_18_reg_2556 = ap_const_lv1_0) and (select_ln923_17_reg_2552 = ap_const_lv1_0) and (select_ln923_16_reg_2548 = ap_const_lv1_0) and (select_ln923_15_reg_2544 = ap_const_lv1_0) and (select_ln923_14_reg_2540 = ap_const_lv1_0) and (select_ln923_13_reg_2536 = ap_const_lv1_0) and (select_ln923_12_reg_2532 = ap_const_lv1_0) and (select_ln923_11_reg_2528 = ap_const_lv1_0) and (select_ln923_10_reg_2524 = ap_const_lv1_0) and (select_ln923_9_reg_2520 = ap_const_lv1_0) and (select_ln923_8_reg_2516 = ap_const_lv1_0) and (select_ln923_7_reg_2512 = ap_const_lv1_0) and (select_ln923_6_reg_2508 = ap_const_lv1_0) and (select_ln923_5_reg_2504 = ap_const_lv1_0) and (select_ln923_4_reg_2500 = ap_const_lv1_0) and (select_ln923_3_reg_2496 = ap_const_lv1_0) and (select_ln923_2_reg_2492 = ap_const_lv1_0) and (select_ln923_1_reg_2488 
    = ap_const_lv1_0) and (select_ln923_reg_2484 = ap_const_lv1_0) and (icmp_ln923_1_reg_2480 = ap_const_lv1_0) and (icmp_ln923_reg_2471 = ap_const_lv1_0) and (icmp_ln899_reg_2462 = ap_const_lv1_0));
    end process;


    ap_condition_548_assign_proc : process(icmp_ln899_fu_608_p2, icmp_ln923_fu_644_p2, icmp_ln923_1_fu_676_p2, select_ln923_fu_728_p3, select_ln923_1_fu_774_p3, select_ln923_2_fu_820_p3, select_ln923_3_fu_866_p3, select_ln923_4_fu_912_p3, select_ln923_5_fu_958_p3, select_ln923_6_fu_1004_p3, select_ln923_7_fu_1050_p3, select_ln923_8_fu_1096_p3, select_ln923_9_fu_1142_p3, select_ln923_10_fu_1188_p3, select_ln923_11_fu_1234_p3, select_ln923_12_fu_1280_p3, select_ln923_13_fu_1326_p3, select_ln923_14_fu_1372_p3, select_ln923_15_fu_1418_p3, select_ln923_16_fu_1464_p3, select_ln923_17_fu_1510_p3, select_ln923_18_fu_1556_p3, select_ln923_19_fu_1602_p3, select_ln923_20_fu_1648_p3, select_ln923_21_fu_1694_p3, select_ln923_22_fu_1734_p3, icmp_ln923_25_fu_1750_p2)
    begin
                ap_condition_548 <= ((icmp_ln923_25_fu_1750_p2 = ap_const_lv1_1) and (select_ln923_22_fu_1734_p3 = ap_const_lv1_0) and (select_ln923_21_fu_1694_p3 = ap_const_lv1_0) and (select_ln923_20_fu_1648_p3 = ap_const_lv1_0) and (select_ln923_19_fu_1602_p3 = ap_const_lv1_0) and (select_ln923_18_fu_1556_p3 = ap_const_lv1_0) and (select_ln923_17_fu_1510_p3 = ap_const_lv1_0) and (select_ln923_16_fu_1464_p3 = ap_const_lv1_0) and (select_ln923_15_fu_1418_p3 = ap_const_lv1_0) and (select_ln923_14_fu_1372_p3 = ap_const_lv1_0) and (select_ln923_13_fu_1326_p3 = ap_const_lv1_0) and (select_ln923_12_fu_1280_p3 = ap_const_lv1_0) and (select_ln923_11_fu_1234_p3 = ap_const_lv1_0) and (select_ln923_10_fu_1188_p3 = ap_const_lv1_0) and (select_ln923_9_fu_1142_p3 = ap_const_lv1_0) and (select_ln923_8_fu_1096_p3 = ap_const_lv1_0) and (select_ln923_7_fu_1050_p3 = ap_const_lv1_0) and (select_ln923_6_fu_1004_p3 = ap_const_lv1_0) and (select_ln923_5_fu_958_p3 = ap_const_lv1_0) and (select_ln923_4_fu_912_p3 = ap_const_lv1_0) and (select_ln923_3_fu_866_p3 = ap_const_lv1_0) 
    and (select_ln923_2_fu_820_p3 = ap_const_lv1_0) and (select_ln923_1_fu_774_p3 = ap_const_lv1_0) and (select_ln923_fu_728_p3 = ap_const_lv1_0) and (icmp_ln923_1_fu_676_p2 = ap_const_lv1_0) and (icmp_ln923_fu_644_p2 = ap_const_lv1_0) and (icmp_ln899_fu_608_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to19_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to19 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_b_frac_07_phi_fu_401_p54_assign_proc : process(select_ln923_reg_2484, select_ln923_1_reg_2488, b_frac_26_reg_2585, ap_phi_reg_pp0_iter1_b_frac_07_reg_398, b_frac_2_fu_1785_p3, b_frac_3_fu_1797_p3, b_frac_4_fu_1809_p3, b_frac_5_fu_1821_p3, b_frac_6_fu_1833_p3, b_frac_7_fu_1845_p3, b_frac_8_fu_1857_p3, b_frac_9_fu_1869_p3, b_frac_10_fu_1881_p3, b_frac_11_fu_1893_p3, b_frac_12_fu_1905_p3, b_frac_13_fu_1917_p3, b_frac_14_fu_1929_p3, b_frac_15_fu_1941_p3, b_frac_16_fu_1953_p3, b_frac_17_fu_1965_p3, b_frac_18_fu_1977_p3, b_frac_19_fu_1989_p3, b_frac_20_fu_2001_p3, b_frac_21_fu_2013_p3, b_frac_22_fu_2025_p3, b_frac_23_fu_2037_p3, b_frac_24_fu_2049_p3, ap_condition_1876, ap_condition_1881, ap_condition_1886, ap_condition_1892, ap_condition_1899, ap_condition_1907, ap_condition_1916, ap_condition_1926, ap_condition_1937, ap_condition_1949, ap_condition_1962, ap_condition_1976, ap_condition_1991, ap_condition_2007, ap_condition_2024, ap_condition_2042, ap_condition_2061, ap_condition_2081, ap_condition_2102, ap_condition_2124, ap_condition_2147, ap_condition_2171, ap_condition_344)
    begin
        if ((ap_const_boolean_1 = ap_condition_344)) then
            if ((ap_const_boolean_1 = ap_condition_2171)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_24_fu_2049_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2147)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_23_fu_2037_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2124)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_22_fu_2025_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2102)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_21_fu_2013_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2081)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_20_fu_2001_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2061)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_19_fu_1989_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2042)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_18_fu_1977_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2024)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_17_fu_1965_p3;
            elsif ((ap_const_boolean_1 = ap_condition_2007)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_16_fu_1953_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1991)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_15_fu_1941_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1976)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_14_fu_1929_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1962)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_13_fu_1917_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1949)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_12_fu_1905_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1937)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_11_fu_1893_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1926)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_10_fu_1881_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1916)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_9_fu_1869_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1907)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_8_fu_1857_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1899)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_7_fu_1845_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1892)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_6_fu_1833_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1886)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_5_fu_1821_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1881)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_4_fu_1809_p3;
            elsif (((select_ln923_1_reg_2488 = ap_const_lv1_1) and (select_ln923_reg_2484 = ap_const_lv1_0))) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_3_fu_1797_p3;
            elsif ((select_ln923_reg_2484 = ap_const_lv1_1)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_2_fu_1785_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1876)) then 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= b_frac_26_reg_2585;
            else 
                ap_phi_mux_b_frac_07_phi_fu_401_p54 <= ap_phi_reg_pp0_iter1_b_frac_07_reg_398;
            end if;
        else 
            ap_phi_mux_b_frac_07_phi_fu_401_p54 <= ap_phi_reg_pp0_iter1_b_frac_07_reg_398;
        end if; 
    end process;


    ap_phi_mux_index0_2_phi_fu_461_p4_assign_proc : process(icmp_ln899_reg_2462, ap_phi_mux_b_frac_07_phi_fu_401_p54, ap_phi_reg_pp0_iter1_index0_2_reg_458, tmp_47_fu_2058_p3)
    begin
        if ((icmp_ln899_reg_2462 = ap_const_lv1_0)) then
            if ((tmp_47_fu_2058_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_index0_2_phi_fu_461_p4 <= ap_phi_mux_b_frac_07_phi_fu_401_p54(55 downto 50);
            elsif ((tmp_47_fu_2058_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_index0_2_phi_fu_461_p4 <= ap_phi_mux_b_frac_07_phi_fu_401_p54(56 downto 51);
            else 
                ap_phi_mux_index0_2_phi_fu_461_p4 <= ap_phi_reg_pp0_iter1_index0_2_reg_458;
            end if;
        else 
            ap_phi_mux_index0_2_phi_fu_461_p4 <= ap_phi_reg_pp0_iter1_index0_2_reg_458;
        end if; 
    end process;


    ap_phi_mux_r_phi_fu_582_p4_assign_proc : process(icmp_ln899_reg_2462_pp0_iter19_reg, ap_phi_reg_pp0_iter20_r_reg_578, add_ln970_fu_2418_p2)
    begin
        if ((icmp_ln899_reg_2462_pp0_iter19_reg = ap_const_lv1_0)) then 
            ap_phi_mux_r_phi_fu_582_p4 <= add_ln970_fu_2418_p2(83 downto 56);
        else 
            ap_phi_mux_r_phi_fu_582_p4 <= ap_phi_reg_pp0_iter20_r_reg_578;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_b_exp_05_reg_467 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_b_frac_07_reg_398 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_reg_578 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_index0_2_reg_458 <= "XXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to19)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_r_phi_fu_582_p4;
    b_frac_10_fu_1881_p3 <= (trunc_ln918_8_fu_1878_p1 & ap_const_lv41_0);
    b_frac_11_fu_1893_p3 <= (trunc_ln918_9_fu_1890_p1 & ap_const_lv42_0);
    b_frac_12_fu_1905_p3 <= (trunc_ln918_10_fu_1902_p1 & ap_const_lv43_0);
    b_frac_13_fu_1917_p3 <= (trunc_ln918_11_fu_1914_p1 & ap_const_lv44_0);
    b_frac_14_fu_1929_p3 <= (trunc_ln918_12_fu_1926_p1 & ap_const_lv45_0);
    b_frac_15_fu_1941_p3 <= (trunc_ln918_13_fu_1938_p1 & ap_const_lv46_0);
    b_frac_16_fu_1953_p3 <= (trunc_ln918_14_fu_1950_p1 & ap_const_lv47_0);
    b_frac_17_fu_1965_p3 <= (trunc_ln918_15_fu_1962_p1 & ap_const_lv48_0);
    b_frac_18_fu_1977_p3 <= (trunc_ln918_16_fu_1974_p1 & ap_const_lv49_0);
    b_frac_19_fu_1989_p3 <= (trunc_ln918_17_fu_1986_p1 & ap_const_lv50_0);
    b_frac_1_fu_650_p3 <= (x_val & ap_const_lv32_0);
    b_frac_20_fu_2001_p3 <= (trunc_ln918_18_fu_1998_p1 & ap_const_lv51_0);
    b_frac_21_fu_2013_p3 <= (trunc_ln918_19_fu_2010_p1 & ap_const_lv52_0);
    b_frac_22_fu_2025_p3 <= (trunc_ln918_20_fu_2022_p1 & ap_const_lv53_0);
    b_frac_23_fu_2037_p3 <= (trunc_ln918_21_fu_2034_p1 & ap_const_lv54_0);
    b_frac_24_fu_2049_p3 <= (trunc_ln918_22_fu_2046_p1 & ap_const_lv55_0);
    b_frac_25_fu_1742_p3 <= (trunc_ln918_24_fu_1702_p1 & ap_const_lv56_0);
    b_frac_26_fu_1760_p3 <= (trunc_ln925_fu_1756_p1 & ap_const_lv57_0);
    b_frac_2_fu_1785_p3 <= (trunc_ln918_fu_1782_p1 & ap_const_lv33_0);
    b_frac_3_fu_1797_p3 <= (trunc_ln918_1_fu_1794_p1 & ap_const_lv34_0);
    b_frac_4_fu_1809_p3 <= (trunc_ln918_2_fu_1806_p1 & ap_const_lv35_0);
    b_frac_5_fu_1821_p3 <= (trunc_ln918_3_fu_1818_p1 & ap_const_lv36_0);
    b_frac_6_fu_1833_p3 <= (trunc_ln918_4_fu_1830_p1 & ap_const_lv37_0);
    b_frac_7_fu_1845_p3 <= (trunc_ln918_5_fu_1842_p1 & ap_const_lv38_0);
    b_frac_8_fu_1857_p3 <= (trunc_ln918_6_fu_1854_p1 & ap_const_lv39_0);
    b_frac_9_fu_1869_p3 <= (trunc_ln918_7_fu_1866_p1 & ap_const_lv40_0);
    b_frac_fu_614_p3 <= (x_val & ap_const_lv31_0);
    eZ_fu_2245_p3 <= (ap_const_lv8_80 & tmp_53_reg_2681_pp0_iter12_reg);
    grp_fu_2176_p0 <= grp_fu_2176_p00(38 - 1 downto 0);
    grp_fu_2176_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_reg_2634),42));
    grp_fu_2176_p1 <= grp_fu_2176_p10(4 - 1 downto 0);
    grp_fu_2176_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_2628),42));
    grp_fu_589_p1 <= ap_const_lv47_268826A13EF(43 - 1 downto 0);
    grp_fu_594_p0 <= grp_fu_594_p00(30 - 1 downto 0);
    grp_fu_594_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_reg_2681),36));
    grp_fu_594_p1 <= grp_fu_594_p10(6 - 1 downto 0);
    grp_fu_594_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_2675),36));
    grp_fu_598_p1 <= ap_const_lv79_3796F62A4DD(43 - 1 downto 0);
    grp_fu_603_p1 <= grp_fu_603_p10(6 - 1 downto 0);
    grp_fu_603_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_tilde_inverse_reg_2608),58));
    icmp_ln899_fu_608_p2 <= "1" when (signed(x_val) < signed(ap_const_lv26_1)) else "0";
    icmp_ln923_10_fu_1076_p2 <= "1" when (and_ln923_10_fu_1068_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_11_fu_1122_p2 <= "1" when (and_ln923_11_fu_1114_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_12_fu_1168_p2 <= "1" when (and_ln923_12_fu_1160_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_13_fu_1214_p2 <= "1" when (and_ln923_13_fu_1206_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_14_fu_1260_p2 <= "1" when (and_ln923_14_fu_1252_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_15_fu_1306_p2 <= "1" when (and_ln923_15_fu_1298_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_16_fu_1352_p2 <= "1" when (and_ln923_16_fu_1344_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_17_fu_1398_p2 <= "1" when (and_ln923_17_fu_1390_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_18_fu_1444_p2 <= "1" when (and_ln923_18_fu_1436_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_19_fu_1490_p2 <= "1" when (and_ln923_19_fu_1482_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_1_fu_676_p2 <= "1" when (and_ln923_1_fu_668_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_20_fu_1536_p2 <= "1" when (and_ln923_20_fu_1528_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_21_fu_1582_p2 <= "1" when (and_ln923_21_fu_1574_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_22_fu_1628_p2 <= "1" when (and_ln923_22_fu_1620_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_23_fu_1674_p2 <= "1" when (and_ln923_23_fu_1666_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_24_fu_1714_p2 <= "1" when (trunc_ln918_s_fu_1706_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_25_fu_1750_p2 <= "1" when (b_frac_25_fu_1742_p3 = ap_const_lv58_200000000000000) else "0";
    icmp_ln923_26_fu_1768_p2 <= "0" when (b_frac_26_fu_1760_p3 = ap_const_lv58_0) else "1";
    icmp_ln923_2_fu_708_p2 <= "1" when (and_ln923_2_fu_700_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_3_fu_754_p2 <= "1" when (and_ln923_3_fu_746_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_4_fu_800_p2 <= "1" when (and_ln923_4_fu_792_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_5_fu_846_p2 <= "1" when (and_ln923_5_fu_838_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_6_fu_892_p2 <= "1" when (and_ln923_6_fu_884_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_7_fu_938_p2 <= "1" when (and_ln923_7_fu_930_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_8_fu_984_p2 <= "1" when (and_ln923_8_fu_976_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_9_fu_1030_p2 <= "1" when (and_ln923_9_fu_1022_p3 = ap_const_lv57_180000000000000) else "0";
    icmp_ln923_fu_644_p2 <= "1" when (and_ln923_s_fu_636_p3 = ap_const_lv57_180000000000000) else "0";
    log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_address0 <= zext_ln946_reg_2598(6 - 1 downto 0);

    log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log0_lut_table_ap_fixed_0_5_64_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_inverse_lut_table_array_address0 <= zext_ln946_fu_2088_p1(6 - 1 downto 0);

    log_apfixed_reduce_log_inverse_lut_table_array_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            log_apfixed_reduce_log_inverse_lut_table_array_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_inverse_lut_table_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_address0 <= zext_ln160_fu_2333_p1(4 - 1 downto 0);

    log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_address0 <= zext_ln160_1_fu_2310_p1(6 - 1 downto 0);

    log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ce0 <= ap_const_logic_1;
        else 
            log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    log_base_fu_2393_p2 <= std_logic_vector(signed(sext_ln964_fu_2390_p1) + signed(add_ln964_fu_2385_p2));
    mul_ln962_fu_2317_p0 <= zext_ln962_fu_2314_p1(14 - 1 downto 0);
    mul_ln962_fu_2317_p1 <= zext_ln962_fu_2314_p1(14 - 1 downto 0);
    select_ln156_fu_2163_p3 <= 
        tmp_51_fu_2152_p3 when (tmp_49_reg_2640(0) = '1') else 
        zext_ln156_fu_2159_p1;
    select_ln923_10_fu_1188_p3 <= 
        xor_ln923_10_fu_1182_p2 when (tmp_21_fu_1128_p3(0) = '1') else 
        icmp_ln923_12_fu_1168_p2;
    select_ln923_11_fu_1234_p3 <= 
        xor_ln923_11_fu_1228_p2 when (tmp_23_fu_1174_p3(0) = '1') else 
        icmp_ln923_13_fu_1214_p2;
    select_ln923_12_fu_1280_p3 <= 
        xor_ln923_12_fu_1274_p2 when (tmp_25_fu_1220_p3(0) = '1') else 
        icmp_ln923_14_fu_1260_p2;
    select_ln923_13_fu_1326_p3 <= 
        xor_ln923_13_fu_1320_p2 when (tmp_27_fu_1266_p3(0) = '1') else 
        icmp_ln923_15_fu_1306_p2;
    select_ln923_14_fu_1372_p3 <= 
        xor_ln923_14_fu_1366_p2 when (tmp_29_fu_1312_p3(0) = '1') else 
        icmp_ln923_16_fu_1352_p2;
    select_ln923_15_fu_1418_p3 <= 
        xor_ln923_15_fu_1412_p2 when (tmp_31_fu_1358_p3(0) = '1') else 
        icmp_ln923_17_fu_1398_p2;
    select_ln923_16_fu_1464_p3 <= 
        xor_ln923_16_fu_1458_p2 when (tmp_33_fu_1404_p3(0) = '1') else 
        icmp_ln923_18_fu_1444_p2;
    select_ln923_17_fu_1510_p3 <= 
        xor_ln923_17_fu_1504_p2 when (tmp_35_fu_1450_p3(0) = '1') else 
        icmp_ln923_19_fu_1490_p2;
    select_ln923_18_fu_1556_p3 <= 
        xor_ln923_18_fu_1550_p2 when (tmp_37_fu_1496_p3(0) = '1') else 
        icmp_ln923_20_fu_1536_p2;
    select_ln923_19_fu_1602_p3 <= 
        xor_ln923_19_fu_1596_p2 when (tmp_39_fu_1542_p3(0) = '1') else 
        icmp_ln923_21_fu_1582_p2;
    select_ln923_1_fu_774_p3 <= 
        xor_ln923_1_fu_768_p2 when (tmp_3_fu_714_p3(0) = '1') else 
        icmp_ln923_3_fu_754_p2;
    select_ln923_20_fu_1648_p3 <= 
        xor_ln923_20_fu_1642_p2 when (tmp_41_fu_1588_p3(0) = '1') else 
        icmp_ln923_22_fu_1628_p2;
    select_ln923_21_fu_1694_p3 <= 
        xor_ln923_21_fu_1688_p2 when (tmp_43_fu_1634_p3(0) = '1') else 
        icmp_ln923_23_fu_1674_p2;
    select_ln923_22_fu_1734_p3 <= 
        xor_ln923_22_fu_1728_p2 when (tmp_45_fu_1680_p3(0) = '1') else 
        icmp_ln923_24_fu_1714_p2;
    select_ln923_23_fu_1774_p3 <= 
        ap_const_lv6_28 when (icmp_ln923_26_fu_1768_p2(0) = '1') else 
        ap_const_lv6_27;
    select_ln923_2_fu_820_p3 <= 
        xor_ln923_2_fu_814_p2 when (tmp_5_fu_760_p3(0) = '1') else 
        icmp_ln923_4_fu_800_p2;
    select_ln923_3_fu_866_p3 <= 
        xor_ln923_3_fu_860_p2 when (tmp_7_fu_806_p3(0) = '1') else 
        icmp_ln923_5_fu_846_p2;
    select_ln923_4_fu_912_p3 <= 
        xor_ln923_4_fu_906_p2 when (tmp_9_fu_852_p3(0) = '1') else 
        icmp_ln923_6_fu_892_p2;
    select_ln923_5_fu_958_p3 <= 
        xor_ln923_5_fu_952_p2 when (tmp_11_fu_898_p3(0) = '1') else 
        icmp_ln923_7_fu_938_p2;
    select_ln923_6_fu_1004_p3 <= 
        xor_ln923_6_fu_998_p2 when (tmp_13_fu_944_p3(0) = '1') else 
        icmp_ln923_8_fu_984_p2;
    select_ln923_7_fu_1050_p3 <= 
        xor_ln923_7_fu_1044_p2 when (tmp_15_fu_990_p3(0) = '1') else 
        icmp_ln923_9_fu_1030_p2;
    select_ln923_8_fu_1096_p3 <= 
        xor_ln923_8_fu_1090_p2 when (tmp_17_fu_1036_p3(0) = '1') else 
        icmp_ln923_10_fu_1076_p2;
    select_ln923_9_fu_1142_p3 <= 
        xor_ln923_9_fu_1136_p2 when (tmp_19_fu_1082_p3(0) = '1') else 
        icmp_ln923_11_fu_1122_p2;
    select_ln923_fu_728_p3 <= 
        xor_ln923_fu_722_p2 when (tmp_fu_682_p3(0) = '1') else 
        icmp_ln923_2_fu_708_p2;
        sext_ln962_fu_2371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln962_1_fu_2361_p4),32));

        sext_ln964_fu_2390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln964_1_reg_2732),37));

        sext_ln970_2_fu_2415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln970_reg_2757),84));

    shl_ln158_1_fu_2182_p3 <= (tmp_52_reg_2650_pp0_iter9_reg & ap_const_lv8_0);
    shl_ln158_2_fu_2252_p3 <= (tmp_54_reg_2687_pp0_iter12_reg & ap_const_lv14_0);
    shl_ln1_fu_2341_p3 <= (tmp_55_reg_2707_pp0_iter14_reg & ap_const_lv15_0);
    shl_ln2_fu_2408_p3 <= (mul_ln970_1_reg_2752 & ap_const_lv37_0);
    shl_ln_fu_2273_p3 <= (mul_ln158_1_reg_2702 & ap_const_lv1_0);
    sub_ln158_1_fu_2284_p2 <= std_logic_vector(unsigned(add_ln158_1_fu_2267_p2) - unsigned(zext_ln158_8_fu_2280_p1));
    sub_ln158_fu_2201_p2 <= std_logic_vector(unsigned(add_ln158_fu_2193_p2) - unsigned(zext_ln158_3_fu_2198_p1));
    sub_ln962_fu_2355_p2 <= std_logic_vector(unsigned(zext_ln962_1_fu_2348_p1) - unsigned(zext_ln962_2_fu_2352_p1));
    tmp_10_fu_874_p4 <= x_val(19 downto 18);
    tmp_11_fu_898_p3 <= x_val(19 downto 19);
    tmp_12_fu_920_p4 <= x_val(18 downto 17);
    tmp_13_fu_944_p3 <= x_val(18 downto 18);
    tmp_14_fu_966_p4 <= x_val(17 downto 16);
    tmp_15_fu_990_p3 <= x_val(17 downto 17);
    tmp_16_fu_1012_p4 <= x_val(16 downto 15);
    tmp_17_fu_1036_p3 <= x_val(16 downto 16);
    tmp_18_fu_1058_p4 <= x_val(15 downto 14);
    tmp_19_fu_1082_p3 <= x_val(15 downto 15);
    tmp_1_fu_658_p4 <= x_val(24 downto 23);
    tmp_20_fu_1104_p4 <= x_val(14 downto 13);
    tmp_21_fu_1128_p3 <= x_val(14 downto 14);
    tmp_22_fu_1150_p4 <= x_val(13 downto 12);
    tmp_23_fu_1174_p3 <= x_val(13 downto 13);
    tmp_24_fu_1196_p4 <= x_val(12 downto 11);
    tmp_25_fu_1220_p3 <= x_val(12 downto 12);
    tmp_26_fu_1242_p4 <= x_val(11 downto 10);
    tmp_27_fu_1266_p3 <= x_val(11 downto 11);
    tmp_28_fu_1288_p4 <= x_val(10 downto 9);
    tmp_29_fu_1312_p3 <= x_val(10 downto 10);
    tmp_2_fu_690_p4 <= x_val(23 downto 22);
    tmp_30_fu_1334_p4 <= x_val(9 downto 8);
    tmp_31_fu_1358_p3 <= x_val(9 downto 9);
    tmp_32_fu_1380_p4 <= x_val(8 downto 7);
    tmp_33_fu_1404_p3 <= x_val(8 downto 8);
    tmp_34_fu_1426_p4 <= x_val(7 downto 6);
    tmp_35_fu_1450_p3 <= x_val(7 downto 7);
    tmp_36_fu_1472_p4 <= x_val(6 downto 5);
    tmp_37_fu_1496_p3 <= x_val(6 downto 6);
    tmp_38_fu_1518_p4 <= x_val(5 downto 4);
    tmp_39_fu_1542_p3 <= x_val(5 downto 5);
    tmp_3_fu_714_p3 <= x_val(23 downto 23);
    tmp_40_fu_1564_p4 <= x_val(4 downto 3);
    tmp_41_fu_1588_p3 <= x_val(4 downto 4);
    tmp_42_fu_1610_p4 <= x_val(3 downto 2);
    tmp_43_fu_1634_p3 <= x_val(3 downto 3);
    tmp_44_fu_1656_p4 <= x_val(2 downto 1);
    tmp_45_fu_1680_p3 <= x_val(2 downto 2);
    tmp_46_fu_1720_p3 <= x_val(1 downto 1);
    tmp_47_fu_2058_p3 <= ap_phi_mux_b_frac_07_phi_fu_401_p54(57 downto 57);
    tmp_4_fu_736_p4 <= x_val(22 downto 21);
    tmp_51_fu_2152_p3 <= (ap_const_lv5_10 & tmp_48_reg_2634);
    tmp_5_fu_760_p3 <= x_val(22 downto 22);
    tmp_6_fu_782_p4 <= x_val(21 downto 20);
    tmp_7_fu_806_p3 <= x_val(21 downto 21);
    tmp_8_fu_828_p4 <= x_val(20 downto 19);
    tmp_9_fu_852_p3 <= x_val(20 downto 20);
    tmp_fu_682_p3 <= x_val(24 downto 24);
    tmp_s_fu_626_p4 <= x_val(25 downto 24);
    trunc_ln918_10_fu_1902_p1 <= x_val_read_reg_2435(15 - 1 downto 0);
    trunc_ln918_11_fu_1914_p1 <= x_val_read_reg_2435(14 - 1 downto 0);
    trunc_ln918_12_fu_1926_p1 <= x_val_read_reg_2435(13 - 1 downto 0);
    trunc_ln918_13_fu_1938_p1 <= x_val_read_reg_2435(12 - 1 downto 0);
    trunc_ln918_14_fu_1950_p1 <= x_val_read_reg_2435(11 - 1 downto 0);
    trunc_ln918_15_fu_1962_p1 <= x_val_read_reg_2435(10 - 1 downto 0);
    trunc_ln918_16_fu_1974_p1 <= x_val_read_reg_2435(9 - 1 downto 0);
    trunc_ln918_17_fu_1986_p1 <= x_val_read_reg_2435(8 - 1 downto 0);
    trunc_ln918_18_fu_1998_p1 <= x_val_read_reg_2435(7 - 1 downto 0);
    trunc_ln918_19_fu_2010_p1 <= x_val_read_reg_2435(6 - 1 downto 0);
    trunc_ln918_1_fu_1794_p1 <= x_val_read_reg_2435(24 - 1 downto 0);
    trunc_ln918_20_fu_2022_p1 <= x_val_read_reg_2435(5 - 1 downto 0);
    trunc_ln918_21_fu_2034_p1 <= x_val_read_reg_2435(4 - 1 downto 0);
    trunc_ln918_22_fu_2046_p1 <= x_val_read_reg_2435(3 - 1 downto 0);
    trunc_ln918_24_fu_1702_p1 <= x_val(2 - 1 downto 0);
    trunc_ln918_2_fu_1806_p1 <= x_val_read_reg_2435(23 - 1 downto 0);
    trunc_ln918_3_fu_1818_p1 <= x_val_read_reg_2435(22 - 1 downto 0);
    trunc_ln918_4_fu_1830_p1 <= x_val_read_reg_2435(21 - 1 downto 0);
    trunc_ln918_5_fu_1842_p1 <= x_val_read_reg_2435(20 - 1 downto 0);
    trunc_ln918_6_fu_1854_p1 <= x_val_read_reg_2435(19 - 1 downto 0);
    trunc_ln918_7_fu_1866_p1 <= x_val_read_reg_2435(18 - 1 downto 0);
    trunc_ln918_8_fu_1878_p1 <= x_val_read_reg_2435(17 - 1 downto 0);
    trunc_ln918_9_fu_1890_p1 <= x_val_read_reg_2435(16 - 1 downto 0);
    trunc_ln918_fu_1782_p1 <= x_val_read_reg_2435(25 - 1 downto 0);
    trunc_ln918_s_fu_1706_p3 <= (trunc_ln918_24_fu_1702_p1 & ap_const_lv55_0);
    trunc_ln925_fu_1756_p1 <= x_val(1 - 1 downto 0);
    trunc_ln962_1_fu_2361_p4 <= sub_ln962_fu_2355_p2(40 downto 15);
    xor_ln923_10_fu_1182_p2 <= (tmp_23_fu_1174_p3 xor ap_const_lv1_1);
    xor_ln923_11_fu_1228_p2 <= (tmp_25_fu_1220_p3 xor ap_const_lv1_1);
    xor_ln923_12_fu_1274_p2 <= (tmp_27_fu_1266_p3 xor ap_const_lv1_1);
    xor_ln923_13_fu_1320_p2 <= (tmp_29_fu_1312_p3 xor ap_const_lv1_1);
    xor_ln923_14_fu_1366_p2 <= (tmp_31_fu_1358_p3 xor ap_const_lv1_1);
    xor_ln923_15_fu_1412_p2 <= (tmp_33_fu_1404_p3 xor ap_const_lv1_1);
    xor_ln923_16_fu_1458_p2 <= (tmp_35_fu_1450_p3 xor ap_const_lv1_1);
    xor_ln923_17_fu_1504_p2 <= (tmp_37_fu_1496_p3 xor ap_const_lv1_1);
    xor_ln923_18_fu_1550_p2 <= (tmp_39_fu_1542_p3 xor ap_const_lv1_1);
    xor_ln923_19_fu_1596_p2 <= (tmp_41_fu_1588_p3 xor ap_const_lv1_1);
    xor_ln923_1_fu_768_p2 <= (tmp_5_fu_760_p3 xor ap_const_lv1_1);
    xor_ln923_20_fu_1642_p2 <= (tmp_43_fu_1634_p3 xor ap_const_lv1_1);
    xor_ln923_21_fu_1688_p2 <= (tmp_45_fu_1680_p3 xor ap_const_lv1_1);
    xor_ln923_22_fu_1728_p2 <= (tmp_46_fu_1720_p3 xor ap_const_lv1_1);
    xor_ln923_2_fu_814_p2 <= (tmp_7_fu_806_p3 xor ap_const_lv1_1);
    xor_ln923_3_fu_860_p2 <= (tmp_9_fu_852_p3 xor ap_const_lv1_1);
    xor_ln923_4_fu_906_p2 <= (tmp_11_fu_898_p3 xor ap_const_lv1_1);
    xor_ln923_5_fu_952_p2 <= (tmp_13_fu_944_p3 xor ap_const_lv1_1);
    xor_ln923_6_fu_998_p2 <= (tmp_15_fu_990_p3 xor ap_const_lv1_1);
    xor_ln923_7_fu_1044_p2 <= (tmp_17_fu_1036_p3 xor ap_const_lv1_1);
    xor_ln923_8_fu_1090_p2 <= (tmp_19_fu_1082_p3 xor ap_const_lv1_1);
    xor_ln923_9_fu_1136_p2 <= (tmp_21_fu_1128_p3 xor ap_const_lv1_1);
    xor_ln923_fu_722_p2 <= (tmp_3_fu_714_p3 xor ap_const_lv1_1);
    zext_ln156_cast_fu_2145_p3 <= (ap_const_lv5_10 & tmp_50_reg_2645);
    zext_ln156_fu_2159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln156_cast_fu_2145_p3),43));
    zext_ln158_3_fu_2198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln158_reg_2670),43));
    zext_ln158_4_fu_2259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln158_2_fu_2252_p3),39));
    zext_ln158_5_fu_2263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_fu_2245_p3),39));
    zext_ln158_8_fu_2280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_2273_p3),39));
    zext_ln158_fu_2189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln158_1_fu_2182_p3),43));
    zext_ln160_1_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_2675_pp0_iter13_reg),64));
    zext_ln160_fu_2333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_2628_pp0_iter14_reg),64));
    zext_ln253_1_fu_2337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(log_apfixed_reduce_log_lut_table_ap_fixed_7_6_64_array_q0),32));
    zext_ln253_fu_2381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(log_apfixed_reduce_log_lut_table_ap_fixed_4_4_16_array_q0),37));
    zext_ln925_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_fu_614_p3),58));
    zext_ln946_fu_2088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_index0_2_phi_fu_461_p4),64));
    zext_ln962_1_fu_2348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_2341_p3),41));
    zext_ln962_2_fu_2352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_2722),41));
    zext_ln962_fu_2314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_reg_2712),28));
end behav;
